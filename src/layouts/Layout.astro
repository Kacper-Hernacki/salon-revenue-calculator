---
import Analytics from '../components/Analytics.astro';
import { getLangFromUrl, getTextDirection, generateAlternateLanguageLinks, type Lang } from '../i18n/utils';
import { getSEOConfig } from '../utils/seo';

export interface Props {
  title?: string;
  description?: string;
}

const lang = getLangFromUrl(Astro.url) as Lang;
const dir = getTextDirection(lang);
const alternateLinks = generateAlternateLanguageLinks(Astro.url.pathname);
const baseUrl = Astro.site?.toString() || (import.meta.env.DEV ? undefined : 'https://your-salon-calculator.com');
const seoConfig = getSEOConfig(lang, Astro.url.pathname, baseUrl);

// Use SEO config or fallback to provided props
const { title = seoConfig.title, description = seoConfig.description } = Astro.props;
---

<!doctype html>
<html lang={lang} dir={dir}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="keywords" content={seoConfig.keywords.join(', ')} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content={seoConfig.robots} />
    {seoConfig.canonical && <link rel="canonical" href={seoConfig.canonical} />}
    <meta name="author" content="Salon Revenue Calculator" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={seoConfig.canonical || Astro.url} />
    <meta property="og:title" content={seoConfig.ogTitle || title} />
    <meta property="og:description" content={seoConfig.ogDescription || description} />
    <meta property="og:image" content={seoConfig.ogImage || '/og-image.png'} />
    <meta property="og:locale" content={lang === 'en' ? 'en_US' : lang === 'zh' ? 'zh_CN' : lang} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={seoConfig.canonical || Astro.url} />
    <meta property="twitter:title" content={seoConfig.twitterTitle || title} />
    <meta property="twitter:description" content={seoConfig.twitterDescription || description} />
    <meta property="twitter:image" content={seoConfig.twitterImage || '/og-image.png'} />

    <!-- Preconnect to external domains for better performance -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="theme-color" content="#8B5CF6" />
    
    <!-- Manifest for PWA -->
    <link rel="manifest" href="/manifest.json" />
    
    <!-- Alternate language links for SEO -->
    {alternateLinks.map(({ url, hreflang }) => (
      <link rel="alternate" hreflang={hreflang} href={url} />
    ))}
    
    <title>{title}</title>
    
    <!-- Structured Data -->
    {seoConfig.structuredData && (
      <script type="application/ld+json" set:html={JSON.stringify(seoConfig.structuredData)} />
    )}
    
    <!-- Analytics -->
    <Analytics />
    
    <!-- Critical CSS - will be inlined by Astro -->
    <style>
      :root {
        --primary: #8B5CF6;
        --primary-dark: #7C3AED;
        --secondary: #EC4899;
        --dark: #1F2937;
        --light: #F9FAFB;
        --success: #10B981;
        --danger: #EF4444;
      }
      
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      
      html {
        font-size: 16px;
        scroll-behavior: smooth;
      }
      
      body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        position: relative;
        overflow-x: hidden;
        direction: inherit;
      }
    </style>
  </head>
  <body>
    <slot />
    
    <!-- Service Worker Registration -->
    <script>
      if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/sw.js')
          .catch(() => {
            // Silently fail if SW not available
          });
      }
    </script>
  </body>
</html>